# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X1NfIDzLxKfj3296VBQihDDfJxFOHvDA
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# upload CSV in Colab
from google.colab import files
uploaded = files.upload()

import io
df = pd.read_csv(io.BytesIO(list(uploaded.values())[0]))
print(df.head())

# encode traffic level
le = LabelEncoder()
df['Traffic Level'] = le.fit_transform(df['Traffic Level'])

X = df[['Temperature (°C)', 'Humidity (%)', 'Traffic Level', 'Wind Speed (km/h)']]
y = df['AQI']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("MAE:", mean_absolute_error(y_test, y_pred))
print("R2:", r2_score(y_test, y_pred))

# feature importance
imp = model.feature_importances_
plt.bar(X.columns, imp)
plt.ylabel("Importance")
plt.show()

# predict manually
temp = float(input("Temperature (°C): "))
hum = float(input("Humidity (%): "))
traffic = int(input("Traffic Level (0=Low,1=Med,2=High): "))
wind = float(input("Wind Speed (km/h): "))

new_data = pd.DataFrame([[temp, hum, traffic, wind]], columns=X.columns)
print("Predicted AQI:", model.predict(new_data)[0])